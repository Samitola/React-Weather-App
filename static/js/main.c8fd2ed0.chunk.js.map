{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","_useState","useState","ready","_useState2","Object","slicedToArray","weatherData","setWeatherData","react_default","a","createElement","className","type","placeholder","autoFocus","value","w-100","city","date","description","src","iconUrl","alt","Math","round","temperature","feelslike","humidity","wind","apiUrl","concat","defaultCity","axios","get","then","response","console","log","data","main","feels_like","temp","weather","speed","name","App","Weather_Weather","href","target","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"qRAIe,SAASA,EAAQC,GAAO,IAAAC,EACCC,mBAAS,CAAEC,OAAO,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC9BM,EAD8BH,EAAA,GACjBI,EADiBJ,EAAA,GAiBrC,GAAIG,EAAYJ,MACd,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLC,YAAY,cACZF,UAAU,eACVG,UAAU,QAGdN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLG,MAAM,SACNJ,UAAU,kBACVK,SAAA,OAKRR,EAAAC,EAAAC,cAAA,UAAKJ,EAAYW,MACjBT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKJ,EAAYY,MACjBV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBL,EAAYa,cAE/CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEU,IAAKd,EAAYe,QACjBC,IAAKhB,EAAYa,YACjBR,UAAU,eAGZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACbY,KAAKC,MAAMlB,EAAYmB,cAE1BjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,WAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBAAiBa,KAAKC,MAAMlB,EAAYoB,YACxClB,EAAAC,EAAAC,cAAA,uBAAeJ,EAAYqB,UAC3BnB,EAAAC,EAAAC,cAAA,kBAAUJ,EAAYsB,KAAtB,aAOV,IACIC,EAAM,oDAAAC,OAAuD/B,EAAMgC,YAA7D,WAAAD,OADK,mCACL,iBACVE,IAAMC,IAAIJ,GAAQK,KAvEpB,SAAwBC,GACtBC,QAAQC,IAAIF,EAASG,MACrB/B,EAAe,CACbL,OAAO,EACPwB,UAAWS,EAASG,KAAKC,KAAKC,WAC9Bf,YAAaU,EAASG,KAAKC,KAAKE,KAChCd,SAAUQ,EAASG,KAAKC,KAAKZ,SAC7BT,KAAM,eACNC,YAAagB,EAASG,KAAKI,QAAQ,GAAGvB,YACtCE,QAAS,uDACTO,KAAMO,EAASG,KAAKV,KAAKe,MACzB1B,KAAMkB,EAASG,KAAKM,eCbX,SAASC,IACtB,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACoC,EAAD,CAASf,YAAY,WACrBvB,EAAAC,EAAAC,cAAA,0CAC4B,IAC1BF,EAAAC,EAAAC,cAAA,KACEqC,KAAK,gDACLC,OAAO,UAFT,eAKK,IAPP,SAQS,IACPxC,EAAAC,EAAAC,cAAA,KACEqC,KAAK,gDACLC,OAAO,UAFT,6BClBV,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAAqB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCADW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,WAAP,KACE1D,EAAAC,EAAAC,cAACyD,EAAD,QAOJlB","file":"static/js/main.c8fd2ed0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      feelslike: response.data.main.feels_like,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: \"Monday 08:00\",\n      description: response.data.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/cloudy.png\",\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Type a city\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary\"\n                w-100\n              />\n            </div>\n          </div>\n        </form>\n        <h1>{weatherData.city}</h1>\n        <ul>\n          <li>{weatherData.date}</li>\n          <li className=\"text-capitalize\">{weatherData.description}</li>\n        </ul>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"clearfix\">\n              <img\n                src={weatherData.iconUrl}\n                alt={weatherData.description}\n                className=\"float-left\"\n              />\n\n              <span className=\"temperature\">\n                {Math.round(weatherData.temperature)}\n              </span>\n              <span className=\"unit\">ÂºC</span>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <ul>\n              <li>Feels Like: {Math.round(weatherData.feelslike)}</li>\n              <li>Humidity: {weatherData.humidity}</li>\n              <li>Wind:{weatherData.wind} km/h</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"b1b7ee9d1c74d69e09f208444a66c295\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n","import React from \"react\";\nimport Weather from \"./Weather\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App \">\n      <div className=\"container\">\n        <Weather defaultCity=\"London\" />\n        <footer>\n          This project was coded by{\" \"}\n          <a\n            href=\"https://github.com/Samitola/portfolio-project\"\n            target=\"_blank\"\n          >\n            Sami Mogaji\n          </a>{\" \"}\n          and is{\" \"}\n          <a\n            href=\"https://github.com/Samitola/react-weather-app\"\n            target=\"_blank\"\n          >\n            open sourced on github\n          </a>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}